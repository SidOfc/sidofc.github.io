{"version":3,"file":"static/webpack/static/development/pages/index.js.5b905fd7e144dbc713fe.hot-update.js","sources":["webpack:///./pages/index.jsx"],"sourcesContent":["// @flow\n\nimport importAll from 'import-all.macro';\nimport {hostname, description, owner} from '../config';\nimport {postMeta} from '../utilities';\nimport Layout from '../components/application';\nimport Card, {Cards} from '../components/blog/card';\nimport WelcomeBanner from '../components/welcome-banner';\nimport Head from 'next/head';\n\nconst prefixes = ['', 'dc:', 'og:', 'twitter:'];\n\nfunction Seo({title, description, author}) {\n    return (\n        <Head>\n            {title && <title>{title}</title>}\n            {description &&\n                prefixes.map(prefix => (\n                    <meta name={`${prefix}:description`} content={description} />\n                ))}\n        </Head>\n    );\n}\n\nconst posts = Object.entries(importAll.sync('./blog/*.mdx'))\n    .reduce(\n        (arr, [path, exports]: [string, any]) =>\n            arr.concat([postMeta({...exports.meta, path})]),\n        []\n    )\n    .sort((p1, p2) => p2.date - p1.date);\n\nexport default function Page() {\n    return (\n        <Layout>\n            <Head>\n                <title>{hostname} &nbsp;&bull;&nbsp; homepage</title>\n                <meta name=\"dc:title\" content={title} />\n                <meta name=\"dc:description\" content={excerpt} />\n                <meta name=\"author\" content={owner.fullName} />\n                <meta name=\"description\" content={description} />\n            </Head>\n            <WelcomeBanner />\n            <Cards>\n                {posts.map(post => (\n                    <Card key={post.title} {...post} />\n                ))}\n            </Cards>\n        </Layout>\n    );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAIA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAMA;;;;A","sourceRoot":""}