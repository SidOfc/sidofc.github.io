{"version":3,"file":"static/webpack/static/development/pages/index.js.ccf82898ec0963df9d4e.hot-update.js","sources":["webpack:///./components/application.jsx","webpack:///./components/layout/footer.jsx","webpack:///./components/layout/header.jsx","webpack:///./config.js","webpack:///./pages/index.jsx"],"sourcesContent":["// @flow\n\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport {hostname} from '../config';\nimport {Container, Header, Content, Footer} from './layout';\nimport Post, {StyledFooter} from './layout/post';\nimport Button from './button';\nimport CodeBlock from './code-block';\nimport {MDXProvider} from '@mdx-js/react';\n\nexport {Post};\n\nexport default function Layout({children}: {children: React.Node}) {\n    return (\n        <Container>\n            <Header />\n            <Content>{children}</Content>\n            <Footer />\n        </Container>\n    );\n}\n\nconst customMDXComponents = {\n    wrapper: PostLayoutWrapper,\n\n    pre({children}: {children: React.Element<any>}) {\n        return <CodeBlock {...children.props} />;\n    },\n\n    li({children}: {children: React.Element<any>}) {\n        return <li>{children.props ? children.props.children : children}</li>;\n    }\n};\n\nexport function withMDX(Component: React.ComponentType<any>) {\n    return function MDXComponent(props: {}) {\n        return (\n            <MDXProvider components={customMDXComponents}>\n                <Component {...props} />\n            </MDXProvider>\n        );\n    };\n}\n\nfunction PostHead({title, excerpt, author}: PostMeta) {\n    return (\n        <Head>\n            <title>\n                {hostname} &nbsp;&bull;&nbsp; {title}\n            </title>\n            <meta name=\"description\" content={excerpt} />\n            <meta name=\"author\" content={author} />\n            <meta name=\"og:type\" content=\"article\" />\n            <meta name=\"og:title\" content={title} />\n            <meta name=\"og:description\" content={excerpt} />\n            <meta name=\"twitter:title\" content={title} />\n            <meta name=\"twitter:description\" content={excerpt} />\n        </Head>\n    );\n}\n\nfunction PostLayoutWrapper({\n    children,\n    meta,\n    ...rest\n}: {\n    children: React.Node,\n    meta?: PostMeta\n}) {\n    return (\n        <Layout>\n            {meta && <PostHead {...meta} />}\n            <Post {...rest}>\n                {children}\n                <StyledFooter>\n                    <Link href=\"/\" passHref>\n                        <Button as=\"a\">Back to all posts</Button>\n                    </Link>\n                </StyledFooter>\n            </Post>\n        </Layout>\n    );\n}\n","// @flow\n\nimport styled from 'styled-components/macro';\nimport {hostname} from '../../config';\nimport {colors, spacing} from '../../config/styles';\n\nexport default function Footer() {\n    return (\n        <StyledFooter>\n            <small>\n                &copy; {hostname} {new Date().getFullYear()}\n            </small>\n        </StyledFooter>\n    );\n}\n\nconst StyledFooter = styled.footer`\n    color: ${colors.dimgray};\n    padding: ${spacing.small} ${spacing.medium};\n    text-align: center;\n`;\n","// @flow\n\nimport styled from 'styled-components/macro';\nimport Logo from '../logo';\nimport Navigation from '../navigation';\nimport {hostname} from '../../config';\nimport {colors, spacing, page} from '../../config/styles';\nimport Link from 'next/link';\n\nexport default function Header(props: Object) {\n    return (\n        <GridCell>\n            <Container {...props}>\n                <Inner>\n                    <Link href=\"/\" passHref>\n                        <Logo as=\"a\" title={`${hostname} homepage`} />\n                    </Link>\n                    <Navigation />\n                </Inner>\n            </Container>\n        </GridCell>\n    );\n}\n\n// A fixed header needs to be rendered\n// in a GridCell (or any other relative block-level element)\n// for CSS grid to fill up the space it should take.\nconst GridCell = styled.div`\n    position: relative;\n    height: ${page.header.height};\n`;\n\nconst Container = styled.header`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: ${page.header.height};\n    background-color: ${colors.white};\n    box-shadow: 0px 0px ${spacing.small} rgba(0, 0, 0, 0.15);\n    z-index: 100;\n`;\n\nconst Inner = styled.div`\n    max-width: ${page.width};\n    padding: 0 0 0 ${spacing.medium};\n    margin: 0 auto;\n    height: calc(100% - 2px);\n    display: grid;\n    display: flex;\n    flex-flow: row nowrap;\n    align-items: center;\n    justify-content: space-between;\n`;\n","module.exports = {\n    ENV: process.env.NODE_ENV,\n    hostname: 'https://sidofc.github.io'\n};\n","// @flow\n\nimport importAll from 'import-all.macro';\nimport {hostname} from '../config';\nimport {postMeta} from '../utilities';\nimport Layout from '../components/application';\nimport Card, {Cards} from '../components/blog/card';\nimport Head from 'next/head';\n\nconst posts = Object.entries(importAll.sync('./blog/*.mdx'))\n    .reduce(\n        (arr, [path, exports]: [string, any]) =>\n            arr.concat([postMeta({...exports.meta, path})]),\n        []\n    )\n    .sort((p1, p2) => p2.date - p1.date);\n\nexport default function Page() {\n    return (\n        <Layout>\n            <Head>\n                <title>{hostname} &nbsp;&bull;&nbsp; homepage</title>\n                <meta name=\"author\" content=\"Sidney Liebrand\" />\n                <meta\n                    name=\"description\"\n                    content=\"Home of Sidney Liebrand, a front-end developer with a sharp eye for detail. Find blog posts and tools written by Sidney right here.\"\n                />\n            </Head>\n            <Cards>\n                {posts.map(post => (\n                    <Card key={post.title} {...post} />\n                ))}\n            </Cards>\n        </Layout>\n    );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AATA;AAYA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAOA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;;;;;;;;;;;;AChFA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;AC3CA;AACA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAIA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAMA;;;;A","sourceRoot":""}