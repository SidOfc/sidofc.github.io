{"pageProps":{"title":"Switching to ASDF version manager","description":"Depending on how many languages you program in, getting all their version managers installed, added to <code>$PATH</code>, configured etc... becomes quite a pain when setting up a new system, or even figuring out how this one works because you've used something else for a while.","published":"2017-08-15T21:04:44Z","readTimeInMinutes":5,"source":{"compiledSource":"var m=Object.defineProperty,u=Object.defineProperties;var h=Object.getOwnPropertyDescriptors;var o=Object.getOwnPropertySymbols;var s=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable;var r=(e,t,n)=>t in e?m(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,a=(e,t)=>{for(var n in t||(t={}))s.call(t,n)&&r(e,n,t[n]);if(o)for(var n of o(t))l.call(t,n)&&r(e,n,t[n]);return e},d=(e,t)=>u(e,h(t));var p=(e,t)=>{var n={};for(var i in e)s.call(e,i)&&t.indexOf(i)<0&&(n[i]=e[i]);if(e!=null&&o)for(var i of o(e))t.indexOf(i)<0&&l.call(e,i)&&(n[i]=e[i]);return n};const makeShortcode=e=>function(n){return console.warn(\"Component \"+e+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",a({},n))},Media=makeShortcode(\"Media\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var i=n,{components:e}=i,t=p(i,[\"components\"]);return mdx(MDXLayout,d(a(a({},layoutProps),t),{components:e,mdxType:\"MDXLayout\"}),mdx(Media,{invertDark:!0,src:\"/media/posts/asdfmovie-banner.svg\",alt:\"asdfmovie quote from youtube\",width:\"356\",height:\"200\",mdxType:\"Media\"}),mdx(\"p\",null,`Version management tools for programming languages are a common thing in (web-)developer land.\nI started to wonder if there was an all-in-one version management tool.\nI want this because as I learn more and do more, I will need more version managers that all\nslow down my shell. So lets prevent that shall we!`),mdx(\"p\",null,\"I've always used \",mdx(\"a\",a({parentName:\"p\"},{href:\"https://rvm.io\",title:\"Visit rvm.io\"}),\"RVM\"),` in the past without problem, the shell took about half a\nsecond to load and that was acceptable. I mean, you can't have it all right :)`),mdx(\"p\",null,\"Aside from sourcing good old RVM, recently I also added \",mdx(\"a\",a({parentName:\"p\"},{href:\"https://github.com/creationix/nvm\",title:\"Visit creationix/nvm on GitHub\"}),\"NVM\"),` to the stack.\nNo problem I thought! Until I resourced my shell and had to wait for two seconds... Yeah,\nthis goes beyond the \"you can't have it all\" criteria. I often open a shell for a quick ssh session,\nrunning tests, git commands, etc... There has to be a better way!`),mdx(\"h2\",null,\"A universal version manager\"),mdx(\"p\",null,\"Enter \",mdx(\"a\",a({parentName:\"p\"},{href:\"https://github.com/asdf-vm/asdf\",title:\"Visit asdf-vm/asdf on GitHub\"}),\"ASDF\"),\" and \",mdx(\"a\",a({parentName:\"p\"},{href:\"https://github.com/asdf-vm/asdf-plugins\",title:\"Visit asdf-vm/asdf-plugins on github\"}),\"friends\"),`.\nASDF is a universal and extensible version management tool for many `,mdx(\"a\",a({parentName:\"p\"},{href:\"https://github.com/asdf-vm/asdf-plugins\",title:\"Visit asdf-vm/asdf-plugins on GitHub\"}),\"programming languages\"),`.\nIt provides the version management tooling and allows you to choose which plugins you would like to install.\nLike Node.js, Ruby or Python for instance.`),mdx(\"p\",null,\"To get started, go to their \",mdx(\"a\",a({parentName:\"p\"},{href:\"https://github.com/asdf-vm/asdf\",title:\"Visit asdf-vm/asdf on GitHub\"}),\"github page\"),\" and install ASDF.\"),mdx(\"p\",null,`After installing, you'll only have the core of ASDF.\nWe'll need to extend it by adding plugins to it and using those to install versions\nof the language we want to use.`),mdx(\"p\",null,`The list of plugins you'll install will differ from what I use.\nI am a front end developer that works with Ruby / Rails as well as React.\nFrom time to time I also muck around in `,mdx(\"a\",a({parentName:\"p\"},{href:\"https://crystal-lang.org/\",title:\"Visit crystal-lang.org\"}),\"Crystal\"),\" or \",mdx(\"a\",a({parentName:\"p\"},{href:\"https://www.rust-lang.org/en-US/\",title:\"Visit rust-lang.org\"}),\"Rust\"),`\n(both of which are awesome `,\"\\u2014\",\" check them out!). So I would head to the \",mdx(\"a\",a({parentName:\"p\"},{href:\"https://github.com/asdf-vm/asdf-plugins\",title:\"Visit asdf-vm plugins page\"}),\"plugins page\"),`\nand look for plugins for those programming languages. The following is what I use:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\"},mdx(\"a\",a({parentName:\"p\"},{href:\"https://github.com/asdf-vm/asdf-ruby\",title:\"Visit asdf-vm-asdf-ruby\"}),\"asdf-vm/asdf-ruby\"))),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\"},mdx(\"a\",a({parentName:\"p\"},{href:\"https://github.com/asdf-vm/asdf-nodejs\",title:\"Visit asdf-vm/asdf-nodejs on GitHub\"}),\"asdf-vm/asdf-nodejs\"))),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\"},mdx(\"a\",a({parentName:\"p\"},{href:\"https://github.com/code-lever/asdf-rust\",title:\"Visit code-lever/asdf-rust on GitHub\"}),\"code-lever/asdf-rust\"))),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\"},mdx(\"a\",a({parentName:\"p\"},{href:\"https://github.com/asdf-community/asdf-crystal\",title:\"Visit asdf-community/asdf-crystal on GitHub\"}),\"asdf-community/asdf-crystal\")))),mdx(\"p\",null,`There are installation instructions on every plugin repo. Sometimes, steps\nfor migrating from your old version manager are also included.\nFor Ruby using RVM, the migration is as easy as moving `,mdx(\"inlineCode\",{parentName:\"p\"},\"~/.rvm/rubies\"),\" to \",mdx(\"inlineCode\",{parentName:\"p\"},\"~/.asdf/installs/ruby.\")),mdx(\"h2\",null,\"Sounds smooth, any bumps along the way?\"),mdx(\"p\",null,`It could be that gems and even Ruby versions will not work. If you run into this issue,\nrun `,mdx(\"inlineCode\",{parentName:\"p\"},\"asdf reshim [language]\"),\" and restart your shell to fix any broken paths.\"),mdx(\"p\",null,\"If the problem persists, you can run \",mdx(\"inlineCode\",{parentName:\"p\"},\"asdf current [language]\"),` to find the current version.\nIt will also print the path to the version file that defined it.\nThis is much simpler than running a mixture of `,mdx(\"inlineCode\",{parentName:\"p\"},\"ls\"),\" and \",mdx(\"inlineCode\",{parentName:\"p\"},\"grep\"),\" to find out where that version comes from.\"),mdx(\"p\",null,\"If you see the following after running \",mdx(\"inlineCode\",{parentName:\"p\"},\"asdf current [language]\"),\":\"),mdx(\"blockquote\",null,mdx(\"p\",{parentName:\"blockquote\"},\"No version set for \",\"[language]\")),mdx(\"p\",null,`It means that you haven't set or installed any versions for that language.\nIf you haven't installed a version, run `,mdx(\"inlineCode\",{parentName:\"p\"},\"asdf list-all [language]\"),`.\nThis will list all the available versions that ASDF can install. Choose a version and run\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"asdf install [language] [version]\"),\" to install it.\"),mdx(\"p\",null,\"If the plugin still doesn't work, run \",mdx(\"inlineCode\",{parentName:\"p\"},\"asdf global [language] [version]\"),\" which will create a \",mdx(\"inlineCode\",{parentName:\"p\"},\"~/.tool-versions\"),` file.\nThe language and version info will be stored and ASDF will attempt to load that version.`),mdx(\"p\",null,\"To set a specific version in a directory, \",mdx(\"inlineCode\",{parentName:\"p\"},\"cd\"),` to it and run\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"asdf local [language] [version]\"),\". ASDF will use a local version over a global version.\"),mdx(\"p\",null,`After migrating from RVM, I had to rename my rubies.\nRVM stored them in the format of `,mdx(\"inlineCode\",{parentName:\"p\"},\"ruby-[major]-[minor]-[patch]-p[ruby-patch]\"),`.\nThis caused ASDF not to switch after running `,mdx(\"inlineCode\",{parentName:\"p\"},\"asdf local ruby 2.4.1\"),` because the folder\nname differed from the version input. Which meant I had to run `,mdx(\"inlineCode\",{parentName:\"p\"},\"asdf local ruby ruby-2.4.1\"),`.\nIf a language is already specified, I'd rather not bother typing it again.\nRemoving the `,mdx(\"inlineCode\",{parentName:\"p\"},\"ruby-\"),\" prefix from the directory names in \",mdx(\"inlineCode\",{parentName:\"p\"},\"~/.asdf/installs/ruby\"),` fixed it.\nRunning `,mdx(\"inlineCode\",{parentName:\"p\"},\"asdf local ruby 2.4.1\"),\" switched perfect afterwards.\"),mdx(\"h2\",null,\"Extra's\"),mdx(\"p\",null,\"A feature of the \",mdx(\"inlineCode\",{parentName:\"p\"},\"asdf-ruby\"),\" plugin is that it can install a set of \",mdx(\"a\",a({parentName:\"p\"},{href:\"https://github.com/asdf-vm/asdf-ruby#default-gems\",title:\"Visit asdf-vm/asdf-ruby section on default gems\"}),\"default gems\"),`\nspecified in a `,mdx(\"inlineCode\",{parentName:\"p\"},\"~/.default-gems file\"),\". I love this one as I'll never have to run \",mdx(\"inlineCode\",{parentName:\"p\"},\"gem install pry\"),\" again!\"),mdx(\"p\",null,`What RVM additionally offers that I have not seen in ASDF is the option to create a gemset.\nThis was and still is a useful feature if you're doing Ruby projects involving lots of different\ngems or even testing with specific gems. I rarely felt the need to create a gemset myself.\nThus not having this feature did not have a lot of impact on my workflow (yet).\nI'm not sure if NVM adds any extra functionality, either way I think ASDF will fill the\ngaps because of how it was designed and how it can be extended.`),mdx(\"p\",null,\"Finally, I added a \",mdx(\"inlineCode\",{parentName:\"p\"},\"~/.asdfrc\"),\" file containing: \",mdx(\"inlineCode\",{parentName:\"p\"},\"legacy_version_file = yes\"),`.\nThis enables ASDF read all version files we know and love.`),mdx(\"h2\",null,\"Conclusion\"),mdx(\"p\",null,\"As for my shell time, it's back where it was with only RVM. But nothing messes with my \",mdx(\"inlineCode\",{parentName:\"p\"},\"cd\"),` command anymore.\nI also don't have to keep adding these noisy `,mdx(\"inlineCode\",{parentName:\"p\"},\"source\"),\" lines to \",mdx(\"a\",a({parentName:\"p\"},{href:\"https://github.com/SidOfc/dotfiles\",title:\"Visit SidOfc/dotfiles on GitHub\"}),\"my dotfiles\"),\".\"),mdx(\"p\",null,`ASDF is still quite new and at the time of writing, there are few integrations.\nThis means that if you use `,mdx(\"inlineCode\",{parentName:\"p\"},\"capistrano\"),` to deploy using RVM for example, you won't be able to do that using ASDF just yet.\nBut as mentioned above, someone somewhere will fix that gap or you could give it a shot yourself!`),mdx(\"p\",null,`I hope you've learned something from this post and also that you will choose to switch to ASDF.\nNot because it's better per-se but because it's universal and extensible and you now no longer have\nto worry about version managers! Install a plugin and you're done! A plugin system and a management system,\nbundled in 3 simple commands with a common interface. ASDF and I will be friends for a long time :)`),mdx(\"p\",null,\"Cheers!\"),mdx(\"p\",null,mdx(\"em\",{parentName:\"p\"},\"Many thanks to \",mdx(\"a\",a({parentName:\"em\"},{href:\"https://medium.com/@vvangemert\",title:\"Visit Vincent van Gemert on Medium\"}),\"@vvgemert\"),\" for proofreading!\")),mdx(\"p\",null,\"\\u{1F44B}\"))}MDXContent.isMDXComponent=!0;\n","scope":{"title":"Switching to ASDF version manager","description":"Depending on how many languages you program in, getting all their version managers installed, added to <code>$PATH</code>, configured etc... becomes quite a pain when setting up a new system, or even figuring out how this one works because you've used something else for a while.","published":"2017-08-15T21:04:44Z"}},"slug":"switching-to-asdf-version-manager"},"__N_SSG":true}