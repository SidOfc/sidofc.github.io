<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="https://www.w3.org/2005/Atom">
    <title>Sidney Liebrand's blog</title>
    <subtitle>The official https://sidneyliebrand.io RSS feed!</subtitle>
    <updated>2019-06-10T02:36:22.000Z</updated>
    <rights>Copyright https://sidneyliebrand.io 2019</rights>
    <category term="technology" />
    <id>https://sidneyliebrand.io</id>
    <link href="https://sidneyliebrand.io" />
    <link rel="self" href="https://sidneyliebrand.io/atom.xml" />
    <author>
        <name>Sidney Liebrand</name>
    </author>
    <entry><title>And your metered paywall isn't part of my story, Medium</title><summary>I've been greeted by the same "Your story isn't part of the metered paywall" message for a while now, and figured it was time to make a change in the right direction.</summary><link rel="alternate" href="https://sidneyliebrand.io/blog/and-your-metered-paywall-isnt-part-of-my-story" /><id>https://sidneyliebrand.io/blog/and-your-metered-paywall-isnt-part-of-my-story</id><updated>2019-06-10T02:36:22.000Z</updated><published>2019-06-10T02:36:22.000Z</published></entry><entry><title>Recruiters who call during working hours</title><summary>Any kind of cold-call from some random recruiter or sales rep is annoying enough as is. Imagine my frustration when I got a call from a recruiter who called on the company phone in the middle of a working day!</summary><link rel="alternate" href="https://sidneyliebrand.io/blog/recruiters-who-call-during-working-hours" /><id>https://sidneyliebrand.io/blog/recruiters-who-call-during-working-hours</id><updated>2018-08-31T20:41:19.000Z</updated><published>2018-08-31T20:41:19.000Z</published></entry><entry><title>Codi.vim + fullscreen buffer</title><summary>Learn how to set up Codi.vim to create a fullscreen scratch buffer that also works with Vim splits. We will take a look at wrapping the Codi command and improving the buffer name(s) as seen in :ls.</summary><link rel="alternate" href="https://sidneyliebrand.io/blog/codi-vim-fullscreen-buffer" /><id>https://sidneyliebrand.io/blog/codi-vim-fullscreen-buffer</id><updated>2018-08-27T05:55:24.000Z</updated><published>2018-08-27T05:55:24.000Z</published></entry><entry><title>Vim tip: persistent undo</title><summary>Usually, when you open a file in your editor, make some changes, save and close, you lose the ability to ctrl+Z. Vim has a built in mechanism to persist changes made to files on disk. This may not sound that exciting, but what if your editor crashes while you have a set of changes you may want to revert stored?</summary><link rel="alternate" href="https://sidneyliebrand.io/blog/vim-tip-persistent-undo" /><id>https://sidneyliebrand.io/blog/vim-tip-persistent-undo</id><updated>2018-08-04T18:17:52.000Z</updated><published>2018-08-04T18:17:52.000Z</published></entry><entry><title>How FZF and ripgrep improved my workflow</title><summary>In my never ending quest for simplicity I recently discovered FZF and ripgrep. Two command-line tools that have the potential to make every dag programming tasks easier. In this post I will explain how I use these tools to do things in a matter of keystrokes rather than having to re-google that command you keep forgetting every. single. time..</summary><link rel="alternate" href="https://sidneyliebrand.io/blog/how-fzf-and-ripgrep-improved-my-workflow" /><id>https://sidneyliebrand.io/blog/how-fzf-and-ripgrep-improved-my-workflow</id><updated>2018-06-23T22:00:00.000Z</updated><published>2018-06-23T22:00:00.000Z</published></entry><entry><title>The greatnesses and gotchas of YAML</title><summary>YAML is a great language for configuration files, it is a lot more flexible than JSON with comments and inheritance for example. While I was doing some research about YAML I found bits of information scattered all over the place so I attempted to piece the great things and the quirks together in a post!</summary><link rel="alternate" href="https://sidneyliebrand.io/blog/the-greatnesses-and-gotchas-of-yaml" /><id>https://sidneyliebrand.io/blog/the-greatnesses-and-gotchas-of-yaml</id><updated>2017-12-23T06:25:59.000Z</updated><published>2017-12-23T06:25:59.000Z</published></entry><entry><title>A collection of Vim key binds</title><summary>In my never ending quest for an optimal Vim setup I am always looking for ways to improve. I've used Vim for about two months now and I'm still learning a lot. In this post I'm going to take you through a part of my .vimrc that describes my non-plugin key binds.</summary><link rel="alternate" href="https://sidneyliebrand.io/blog/a-collection-of-vim-key-binds" /><id>https://sidneyliebrand.io/blog/a-collection-of-vim-key-binds</id><updated>2017-09-16T11:11:03.000Z</updated><published>2017-09-16T11:11:03.000Z</published></entry><entry><title>Combining Caniuse with FZF</title><summary>There is caniuse.com which you can use to search online, but what if you're a lazy dev like me that likes to keep his stuff in the terminal? Well, for this reason I wrote a small wrapper using some of my all time favorite tools: Ruby and FZF!</summary><link rel="alternate" href="https://sidneyliebrand.io/blog/combining-caniuse-with-fzf" /><id>https://sidneyliebrand.io/blog/combining-caniuse-with-fzf</id><updated>2017-09-03T09:47:27.000Z</updated><published>2017-09-03T09:47:27.000Z</published></entry><entry><title>Switching to ASDF version manager</title><summary>Depending on how many languages you program in, getting all their version managers installed, added to $PATH, configured etc... becomes quite a pain when setting up a new system, or even figuring out how this one works because you've used something else for a while.</summary><link rel="alternate" href="https://sidneyliebrand.io/blog/switching-to-asdf-version-manager" /><id>https://sidneyliebrand.io/blog/switching-to-asdf-version-manager</id><updated>2017-08-15T19:04:44.000Z</updated><published>2017-08-15T19:04:44.000Z</published></entry>
</feed>
